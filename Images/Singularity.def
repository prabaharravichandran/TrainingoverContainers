Bootstrap: docker
From: ubuntu:24.04

%files
    /gpfs/fs7/aafc/phenocart/PhenomicsProjects/TrainingoverContainers/Images/requirements.txt /home/ubuntu/requirements.txt
    /gpfs/fs7/aafc/phenocart/PhenomicsProjects/TrainingoverContainers/Images/mongod.config /home/ubuntu/mongod.config
    /gpfs/fs7/aafc/phenocart/PhenomicsProjects/TrainingoverContainers/Images/config.json /home/ubuntu/config.json

%post
    # Ensure non-interactive mode
    export DEBIAN_FRONTEND=noninteractive

    # Create necessary directories in root
    mkdir -p /fs /space /gpfs /mnt/mongodb

    # Set proper permissions (optional)
    chmod 755 /fs /space /gpfs /mnt/mongodb

    ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime
    echo "Etc/UTC" > /etc/timezone

    # Basic updates and installs
    apt-get update && apt-get install -y \
        software-properties-common \
        wget git build-essential \
        tzdata \
        libcurl4 \
        gnupg curl \
        libgl1 \
        && apt-get clean && rm -rf /var/lib/apt/lists/*

    # Add MongoDB 8.0 for Ubuntu 24.04 (Noble)
    curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc | \
    gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg \
    --dearmor

    echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-8.0.list

    apt-get update
    apt-get install -y mongodb-org

    # NVIDIA CUDA Toolkit "https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#"
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-keyring_1.1-1_all.deb
    dpkg -i cuda-keyring_1.1-1_all.deb

    apt-get update
    apt install -y nvidia-cuda-toolkit

    # Install Python
    apt update
    apt install -y python3 python3-pip python3-venv
    ln -s /usr/bin/python3 /usr/bin/python

    # Create virtual environment
    python -m venv /home/venv
    chmod -R 755 /home/
    . /home/venv/bin/activate

    # Install pip packages in the virtual environment
    pip install --upgrade pip setuptools wheel
    pip install --no-cache-dir -r /home/ubuntu/requirements.txt

%runscript
    # Run the provided command inside the virtual environment
    exec python "$@"
